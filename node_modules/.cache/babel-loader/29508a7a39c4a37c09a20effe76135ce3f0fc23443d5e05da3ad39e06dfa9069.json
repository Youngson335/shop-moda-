{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-586b0a54\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.brands, brand => {\n    return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"ul\", {\n      class: _normalizeClass([\"modal__name\", {\n        clickName: $data.toggleBackground\n      }]),\n      onClick: $event => $options.toggleColor(brand.id)\n    }, [(_openBlock(), _createElementBlock(\"li\", {\n      key: brand.id\n    }, _toDisplayString(brand.name), 1 /* TEXT */))], 10 /* CLASS, PROPS */, _hoisted_1)]);\n  }), 256 /* UNKEYED_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$data","brands","brand","_createElementVNode","class","_normalizeClass","clickName","toggleBackground","onClick","$event","$options","toggleColor","id","key","name","_hoisted_1"],"sources":["/Users/vladislav/Desktop/work/moda-project/src/UI/ModalName.vue"],"sourcesContent":["<template>\n  <div v-for=\"brand in brands\">\n    <ul\n      class=\"modal__name\"\n      @click=\"toggleColor(brand.id)\"\n      :class=\"{ clickName: toggleBackground }\"\n    >\n      <li :key=\"brand.id\">{{ brand.name }}</li>\n    </ul>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      toggleBackground: false,\n      brands: [\n        { id: 1, name: \"vans\" },\n        { id: 2, name: \"adidas\" },\n        { id: 3, name: \"puma\" },\n        { id: 4, name: \"reebok\" },\n        { id: 5, name: \"new balance\" },\n      ],\n    };\n  },\n  methods: {\n    toggleColor(id) {\n      return (brand.id = this.toggleBackground = !this.toggleBackground);\n    },\n  },\n};\n</script>\n<style scoped>\nul {\n  padding-inline-start: 0px;\n}\nli {\n  list-style-type: none;\n  color: white;\n  user-select: none;\n  cursor: pointer;\n  transition: all 0.1s;\n  margin: 0 10px;\n  padding: 3px 5px;\n  font-size: 17px;\n  border: 1.5px solid white;\n  border-radius: 10px;\n  transition: all 0.1s;\n}\nli:hover {\n  background-color: white;\n  color: black;\n  transition: all 0.1s;\n}\n.modal__name {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.clickName li {\n  background-color: green;\n}\n</style>\n"],"mappings":";;mBAAA;;2BACEA,mBAAA,CAQMC,SAAA,QATRC,WAAA,CACuBC,KAAA,CAAAC,MAAM,EAAfC,KAAK;yBAAjBL,mBAAA,CAQM,cAPJM,mBAAA,CAMK;MALHC,KAAK,EAHXC,eAAA,EAGY,aAAa;QAAAC,SAAA,EAEEN,KAAA,CAAAO;MAAgB;MADpCC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,WAAW,CAACT,KAAK,CAACU,EAAE;uBAG5Bf,mBAAA,CAAyC;MAApCgB,GAAG,EAAEX,KAAK,CAACU;wBAAOV,KAAK,CAACY,IAAI,kB,yBAPvCC,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}